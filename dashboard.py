# -*- coding: utf-8 -*-
"""Dashboard.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1zEqIHhsxgcvCqhQiwpzuxw5wOgDRvIAQ

Setelah Code dibawah di run, muncul perintah untuk upload file, pilih file dataset yang digunakan, yaitu:
- day.csv
- hour.csv
"""

import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# Title for your app
st.title('Bike Sharing Demand Analysis')

# Streamlit file uploader
uploaded_day_file = st.file_uploader("Choose a day file", type=['csv'])
uploaded_hour_file = st.file_uploader("Choose an hour file", type=['csv'])

if uploaded_day_file is not None and uploaded_hour_file is not None:
    # Read the uploaded files
    day_data = pd.read_csv(uploaded_day_file)
    hour_data = pd.read_csv(uploaded_hour_file)

    # Data preprocessing
    if 'dteday' in day_data.columns:
        day_data['date'] = pd.to_datetime(day_data['dteday'])
        day_data.set_index('date', inplace=True)
        day_data = day_data.rename(columns={"weathersit":"weather",
                                            "dteday":"date",
                                            "yr":"year",
                                            "mnth":"month",
                                            "hum":"humidity",
                                            "cnt":"count",
                                            "temp":"Temperature"})

    if 'dteday' in hour_data.columns:
        hour_data['date'] = pd.to_datetime(hour_data['dteday'])
        hour_data.set_index('date', inplace=True)
        hour_data = hour_data.rename(columns={"weathersit":"weather",
                                              "dteday":"date",
                                              "yr":"year",
                                              "mnth":"month",
                                              "hum":"humidity",
                                              "cnt":"count",
                                              "temp":"Temperature"})

    # Analysis and Plots
    # Daily passengers
    if 'count' in day_data.columns:
        daily_passengers = day_data['count'].resample('D').sum().reset_index()
        holiday_passengers = day_data[day_data['holiday'] == 1]['count'].resample('D').sum().reset_index()
        non_holiday_passengers = day_data[day_data['holiday'] == 0]['count'].resample('D').sum().reset_index()

        st.subheader('Dampak Liburan Terhadap Jumlah Penumpang')
        fig, ax = plt.subplots(figsize=(10, 7))
        sns.lineplot(data=daily_passengers, x='date', y='count', label='Total Penumpang')
        sns.lineplot(data=holiday_passengers, x='date', y='count', label='Liburan')
        sns.lineplot(data=non_holiday_passengers, x='date', y='count', label='Hari Biasa')
        plt.xlabel('Tanggal')
        plt.ylabel('Jumlah Penumpang')
        plt.legend()
        st.pyplot(fig)

    # Hourly passengers
    if 'count' in hour_data.columns:
        hourly_passengers = hour_data['count'].resample('H').mean().reset_index()

        st.subheader('Pola Penggunaan Sepeda per Jam')
        fig2, ax2 = plt.subplots(figsize=(12, 6))
        sns.lineplot(data=hourly_passengers, x='date', y='count', marker='o', color='b')
        plt.xlabel('Jam')
        plt.ylabel('Jumlah Penumpang Rata-rata')
        plt.xticks(rotation=45)
        plt.grid(True)
        st.pyplot(fig2)

        # Sum of hourly counts
        hourly_counts = hour_data['count'].resample('H').sum().reset_index()

        st.subheader('Dampak Pola Penggunaan Sepeda Terhadap Jumlah Penumpang per Jam')
        fig3, ax3 = plt.subplots(figsize=(12, 6))
        sns.lineplot(data=hourly_counts, x='date', y='count', marker='o', color='r')
        plt.xlabel('Jam')
        plt.ylabel('Jumlah Penumpang')
        plt.xticks(rotation=45)
        plt.grid(True)
        st.pyplot(fig3)